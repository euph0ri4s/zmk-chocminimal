#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

// LAYERS

#define LAYER_BASE 0
#define LAYER_NAV  1
#define LAYER_NUM  2
#define LAYER_SYM  3
#define LAYER_BT   4
#define LAYER_GAME 5
#define LAYER_G+   6

// MACROS
// CONFIGRATION
//#define COMBO(NAME, KEYPOS, LAYER) \
//    combo_#NAME { \
//        layers = <LAYER>; \
//        timeout-ms = <40>; \
//        key-positions = <KEYPOS>; \
//        bindings = <&kp NAME>; \
//    };

&lt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <0>;
};

// define timeout for some functions
//#if !defined TIMEOUT_COMBO_2
//#define TIMEOUT_COMBO_2 175
//#endif
//#if !defined TIMEOUT_COMBO_3
//#define TIMEOUT_COMBO_3 200
//#endif
//#if !defined TIMEOUT_LAYER_HOLD
//#define TIMEOUT_LAYER_HOLD 200
//#endif
// homerow and combos

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_mods";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // Left hand combos

        combo_Q {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <2 0>;
            bindings = <&kp Q>;
        };

        combo_W {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp W>;
        };

        combo_F {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp F>;
        };

        combo_P {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp P>;
        };

        combo_B {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <3 1>;
            bindings = <&kp B>;
        };

        combo_G {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <3 0>;
            bindings = <&kp G>;
        };

        combo_V {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <11 1>;
            bindings = <&kp V>;
        };

        combo_COMMA {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <4 6>;
            bindings = <&kp COMMA>;
        };

        combo_DOT {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <4 13>;
            bindings = <&kp PERIOD>;
        };

        combo_U {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <4 5>;
            bindings = <&kp U>;
        };

        combo_Y {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <6 5>;
            bindings = <&kp Y>;
        };

        combo_MINUS {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <5 6 7>;
            bindings = <&kp MINUS>;
        };

        combo_M {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <4 7>;
            bindings = <&kp M>;
        };

        combo_FSLH {
            layers = <0>;
            timeout-ms = <35>;
            key-positions = <12 5>;
            bindings = <&kp FSLH>;
        };

        combo_PG_DN {
            layers = <1 3>;
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp LEFT_BRACKET>;
        };

        combo_RBKT {
            layers = <3>;
            timeout-ms = <50>;
            key-positions = <4 5>;
            bindings = <&kp RBKT>;
        };

        combo_LBRC {
            layers = <3>;
            timeout-ms = <50>;
            key-positions = <11 9>;
            bindings = <&kp LBRC>;
        };

        combo_RBRC {
            layers = <3>;
            timeout-ms = <50>;
            key-positions = <14 12>;
            bindings = <&kp RBRC>;
        };

        combo_LPAR {
            layers = <3>;
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp LPAR>;
        };

        combo_RPAR {
            layers = <3>;
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp RPAR>;
        };

        combo_CAPS {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <15 14>;
            bindings = <&kp CAPS>;
        };

        combo_F9 {
            layers = <2>;
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp F9>;
        };

        combo_F10 {
            layers = <2>;
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp F10>;
        };

        combo_F11 {
            layers = <2>;
            timeout-ms = <50>;
            key-positions = <15 13>;
            bindings = <&kp F11>;
        };

        combo_F12 {
            layers = <2>;
            timeout-ms = <50>;
            key-positions = <15 14>;
            bindings = <&kp F12>;
        };

        combo_N7 {
            layers = <2>;
            timeout-ms = <50>;
            key-positions = <9 10>;
            bindings = <&kp N7>;
        };

        combo_N8 {
            layers = <2>;
            timeout-ms = <50>;
            key-positions = <9 11>;
            bindings = <&kp N8>;
        };

        combo_N9 {
            layers = <2>;
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp N9>;
        };

        combo_delkey {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <12 14>;
            bindings = <&kp DEL>;
        };

        combo_esckey {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp ESC>;
        };

        combo_ent {
            bindings = <&kp ENTER>;
            key-positions = <12 13>;
            timeout-ms = <50>;
            layers = <0>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <17 16>;
            timeout-ms = <50>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "LAYER_BASE";
            bindings = <
&hm LGUI A      &hm LALT R  &hm LCTRL S          &hm LSHIFT T          &hm LSHIFT N      &hm LCTRL E          &hm LALT I  &hm LGUI O
&lt LAYER_BT Z  &kp X       &kp C                &kp D                 &lt 2 H           &kp J                &kp K       &kp L
                            &lt LAYER_NAV SPACE  &lt LAYER_SYM BSPC    &lt LAYER_BT TAB  &lt LAYER_NUM ENTER
            >;

            // trackball-bindings = <&tmv_coarse>;
        };

        nav_layer {
            label = "LAYER_NAV";
            bindings = <
&kp LEFT  &kp UP  &kp DOWN  &kp RIGHT    &kp LC(HOME)  &kp HOME  &kp END  &kp LC(END)
&kp L     &kp K   &kp J     &kp H        &kp LEFT      &kp DOWN  &kp UP   &kp RIGHT
                  &trans    &trans       &trans        &trans
            >;
        };

        number_layer {
            label = "LAYER_NUM";
            bindings = <
&kp DOT  &kp N4  &kp N5  &kp N6    &kp F5  &kp F6  &kp F7  &kp F8
&kp N0   &kp N1  &kp N2  &kp N3    &trans  &kp F2  &kp F3  &kp F4
                 &trans  &trans    &trans  &trans
            >;
        };

        symbol_layer {
            label = "LAYER_SYM";
            bindings = <
&kp EXCL   &kp AT     &kp HASH  &kp DLLR     &kp AMPS  &kp STAR  &kp DQT   &kp SQT
&kp UNDER  &kp EQUAL  &kp PLUS  &kp PRCNT    &kp BSLH  &kp PIPE  &kp SEMI  &kp COLON
                      &trans    &trans       &trans    &trans
            >;
        };

        bt_layer {
            label = "LAYER_BT";
            bindings = <
&trans  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans
&trans  &trans        &trans        &to 5           &trans        &trans        &trans        &bt BT_CLR
                      &trans        &trans          &trans        &trans
            >;
        };

        game_layer {
            label = "LAYER_GAME";
            bindings = <
&kp LSHFT  &kp Q  &kp W      &kp R        &kp N1  &kp N2  &kp N3  &kp N4
&kp LCTRL  &kp A  &kp S      &kp D        &mkp LCLK   &kp F   &kp B   &kp M
                  &kp SPACE  &lt 6 ESC    &trans  &trans
            >;
        };

        game+_layer {
            label = "LAYER_G+";
            bindings = <
&kp N1    &kp N2  &kp N3  &kp N4    &kp N   &kp E   &kp I  &kp O
&kp LALT  &kp Z   &kp X   &kp T     &kp H   &kp J   &kp K  &to 0
                  &trans  &trans    &trans  &trans
            >;
        };
    };
};
